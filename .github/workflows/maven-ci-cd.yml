# .github/workflows/maven-ci-cd.yml
name: Java CI/CD with Maven

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B verify --file pom.xml

  deploy-snapshot:
    name: Deploy SNAPSHOT to Sonatype
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: central
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN

      - name: Deploy SNAPSHOT to Sonatype Central
        run: mvn -B deploy --file pom.xml
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}

  release:
    name: Release to Sonatype Central
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permiso para crear releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para el historial completo para generar las notas de la release

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: central
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Set release version
        id: set_version
        run: |
          # Extrae la versión del POM, ej: "1.0.0-SNAPSHOT"
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          # Quita "-SNAPSHOT" para obtener la versión de release, ej: "1.0.0"
          RELEASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
          echo "Current version: $CURRENT_VERSION"
          echo "Release version: $RELEASE_VERSION"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          # Actualiza el pom.xml en el runner a la versión de release
          mvn versions:set -DnewVersion=$RELEASE_VERSION -DgenerateBackupPoms=false

#      - name: Deploy Release to Sonatype Central
#        run: mvn -B deploy -P release --file pom.xml
#        env:
#          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}

      - name: Create GitHub Release and Tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
